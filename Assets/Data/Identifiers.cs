/*
 * Defines all the type/event identifiers as well as binary flag values for bitwise operations.
 * 
 * Use: Identifiers.BERRY_FIRMNESS.HARD
 * You may ommit the 'Identifiers' name in files by specifying: 'using Identifiers;'
 * 
*/

using System;

namespace Identifiers {
	public enum BERRY_FIRMNESS {VERY_SOFT = 1, SOFT, HARD, VERY_HARD, SUPER_HARD};
	//Breeding Compatibility
	public enum EGG_GROUP {MONSTER = 1, WATER1, BUG, FLYING, GROUND, FAIRY, PLANT, HUMANSHAPE, WATER3, MINERAL, INDETERMINATE, WATER2, DITTO, DRAGON, NO_EGGS};
	
	public enum ENCOUNTER_METHOD {WALK = 1, OLD_ROD, GOOD_ROD, SUPER_ROD, SURF, ROCK_SMASH, HEADBUTT, DARK_GRASS, GRASS_SPOTS, CAVE_SPOTS, BRIDGE_SPOTS, SUPER_ROD_SPOTS, SURF_SPOTS};
	
	public enum EVOLUTION_TRIGGER {LEVEL_UP = 1, TRADE, USE_ITEM, SHED};
	
	public enum GENDER {FEMALE = 1, MALE, GENDERLESS};
	//Leveling Rate, can be used identify formulas in the database
	public enum GROWTH_RATE {SLOW = 1, MEDIUM, FAST, MEDIUM_SLOW, SLOW_THEN_VERY_FAST, FAST_THEN_VERY_SLOW};
	
	public enum ITEM_FLAG {COUNTABLE = 1, CONSUMABLE, USABLE_OUTSIDE_BATTLE, USABLE_IN_BATTLE, HOLDABLE, HOLDABLE_PASSIVE, HOLDABLE_ACTIVE, UNDERGROUND};
	[Flags]
	public enum ITEM_FLAG_BINARY {COUNTABLE = 0x01, CONSUMABLE = 0x02, USABLE_OUTSIDE_BATTLE = 0x03, USABLE_IN_BATTLE = 0x04, HOLDABLE = 0x05, HOLDABLE_PASSIVE = 0x06, HOLDABLE_ACTIVE = 0x07, UNDERGROUND = 0x08}
	
	public enum ITEM_POCKET {MISC = 1, MEDICINE, POKEBALLS, MACHINES, BERRIES, MAIL, BATTLE, KEY};
	
	public enum LANGUAGE {JAPANESE_KANA = 1, JAPANESE_ROMAJI, KOREAN, CHINESE, FRENCH, GERMAN, SPANISH, ITALIAN, ENGLISH, CZECH_SLAVIC, JAPANESE_KANJI};
	
	public enum MOVE_BATTLE_STYLE {ATTACK = 1, DEFENSE, SUPPORT};
	
	public enum MOVE_DAMAGE_CLASS {STATUS = 1, PHYSICAL, SPECIAL};
	
	public enum MOVE_FLAGS {CONTACT = 1, CHARGE, RECHARGE, PROTECT, REFLECT, SNATCH, MIRROR, PUNCH, SOUND, GRAVITY, DEFROST, DISTANCE, HEAL, IGNORE_MOVE, POWDER, BITE, PULSE, BALLISTICS, MENTAL};
	[Flags]
	public enum MOVE_FLAGS_BINARY {CONTACT = 0x01, CHARGE = 0x02, RECHARGE = 0x03, PROTECT = 0x04, REFLECT = 0x05, SNATCH = 0x06, MIRROR = 0x07, PUNCH = 0x08, SOUND = 0x09, GRAVITY = 0x10, DEFROST = 0x11, DISTANCE = 0x12, HEAL = 0x13, IGNORE_MOVE = 0x14, POWDER = 0x15, BITE = 0x16, PULSE = 0x17, BALLISTICS = 0x18, MENTAL = 0x19}
	
	public enum MOVE_META_AILMENT {UNKNOWN = -1, NONE = 0, PARALYSIS = 1, SLEEP, FREEZE, BURN, POISON, CONFUSION, INFACTUATION, TRAP, NIGHTMARE, TORMENT, DISABLE, YAWN, HEAL_BLOCK, NO_TYPE_IMMUNITY, LEECH_SEED, EMBARGO, PERISH_SONG, INGRAIN};
	
	public enum MOVE_META_CATEGORY {DAMAGE = 0, AILMENT = 1, STAT_CHANGE, HEAL, DAMAGE_AND_AILMENT, SWAGGER, DAMAGE_AND_LOWER_STATS, DAMAGE_AND_RAISE_OWN_STATS, DAMAGE_AND_ABSORB_HEALTH, ONE_HIT_KO, FIELD_EFFECT, FORCE_POKEMON_SWITCH, UNIQUE};
	//Used in Pokedex and group type favorable color associations
	public enum POKEMON_COLOR {BLACK = 1, BLUE, BROWN, GRAY, GREEN, PINK, PURPLE, RED, WHITE, YELLOW};
	
	public enum POKEMON_HABITAT {CAVE = 1, FOREST, GRASSLAND, MOUNTAIN, RARE, ROUGH_TERRAIN, SEA, URBAN, WATERS_EDGE};
	//Apparently if you beat a series of challenges, your Pikachu in this event can learn to surf..
	public enum POKEMON_MOVE_METHOD {LEVEL_UP = 1, EGG_HATCHED, LEARNT_MOVE, TAUGHT_MACHINE, PIKACHU_LEARNT_SURF, PICHU_LIGHT_BALL_VOLT_TACKLE, DARK_TATTOO_COLOSSEUM_PURIFICATION, DARK_TATTOO_XD_SHADOW, DARK_TATTOO_XD_PURIFICATION, ROTOM_FORM_EXCLUSIVE_MOVE};
	
	public enum POKEMON_SHAPE {BALL = 1, SQUIGGLE, FISH, ARMS, BLOG, UPRIGHT, LEGS, QUADRUPED, WINGS, TENTACLES, HEADS, HUMANOID, BUG_WINGS, ARMOR};
	
	public enum REGION {KANTO = 1, JOHTO, HOENN, SINNOH, UNOVA, KALOS};
	
	public enum STATS {HP = 1, ATTACK, DEFENCE, SPECIAL_ATTACK, SPECIAL_DEFENCE, SPEED, ACCURACY, EVASION};
	
	public enum TYPES {NORMAL = 1, FIGHTING, FLYING, POISON, GROUND, ROCK, BUG, GHOST, STEEL, FIRE, WATER, GRASS, ELECTRIC, PSYCHIC, ICE, DRAGON, DARK, FAIRY, UNKNOWN = 10001, SHADOW};
}